{"version":3,"sources":["app.component.ts"],"names":[],"mappings":"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","file":"app.component.js","sourcesContent":["import {Component, OnInit} from \"@angular/core\";\r\nimport {RouteConfig, ROUTER_DIRECTIVES, ROUTER_PROVIDERS, Router} from '@angular/router-deprecated';\r\nimport {Http, HTTP_PROVIDERS} from '@angular/http';\r\nimport {PollContainer} from \"./poll-container.component\";\r\nimport {NewPoll} from \"./new-poll.component\";\r\nimport {AfterAuth} from \"./after-auth.component\";\r\nimport {AuthService} from \"./auth.service\";\r\nimport {PollsService} from \"./polls.service\";\r\nimport {User, Credentials} from \"./User\";\r\n\r\n@Component({\r\n\tselector: 'my-app',\r\n\tstyleUrls: ['../css/app.css'],\r\n\ttemplate: `\r\n\t\t<div id=\"wrapper\">\r\n\t\t\t<div id=\"header\">\r\n\t\t\t\t<div id=\"title\">\r\n\t\t\t\t\t<h1>FCC Voting App</h1>\r\n\t\t\t\t\t<div id=\"foot\">\r\n\t\t\t\t\t\t<a id=\"gh-link\" href=\"https://github.com/Daynil/ang2-fcc-voting\">\r\n\t\t\t\t\t\t\t<i class=\"fa fa-github-square fa-lg\"></i>\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t<div id=\"foot-text\">\r\n\t\t\t\t\t\t\tBy <a href=\"https://github.com/Daynil/\">Daynil</a> for <a href=\"http://www.freecodecamp.com/\">FCC</a>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div id=\"menu\">\r\n\t\t\t\t\t<div [ngClass]=\"setButtonClass('home')\" (click)=\"navHome()\">Home</div>\r\n\t\t\t\t\t<div [ngClass]=\"setButtonClass('my-polls')\" (click)=\"navMyPolls()\" *ngIf=\"credentials.loggedIn\">My Polls</div>\r\n\t\t\t\t\t<a [routerLink]=\"['NewPoll']\"><div [ngClass]=\"setButtonClass('new-poll')\" *ngIf=\"credentials.loggedIn\">New Poll</div></a>\r\n\t\t\t\t\t<div class=\"button\" (click)=\"handleLogging()\">\r\n\t\t\t\t\t\t<div *ngIf=\"credentials.loggedIn\">{{credentials.user.username}}</div>\r\n\t\t\t\t\t\t<div>{{loginButton}}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<router-outlet></router-outlet>\r\n\t\t</div>\r\n\t`,\r\n\tdirectives: [PollContainer, ROUTER_DIRECTIVES],\r\n\tproviders: [ROUTER_PROVIDERS, HTTP_PROVIDERS, AuthService, PollsService]\r\n})\r\n@RouteConfig([\r\n\t{\r\n\t\tpath: '/',\r\n\t\tname: 'PollContainer',\r\n\t\tcomponent: PollContainer\r\n\t},\r\n\t{\r\n\t\tpath: '/new-poll',\r\n\t\tname: 'NewPoll',\r\n\t\tcomponent: NewPoll\r\n\t},\r\n\t{\r\n\t\tpath: '/after-auth',\r\n\t\tname: 'AfterAuth',\r\n\t\tcomponent: AfterAuth\r\n\t}\r\n])\r\nexport class AppComponent implements OnInit {\r\n\tloginButton = 'Log In';\r\n\tcredentials: Credentials = {loggedIn: false, user: null};\r\n\tmyPollsFiltering: boolean = false;\r\n\t\r\n\tconstructor(private authService: AuthService, private router: Router) {\t}\r\n\t\r\n\tngOnInit() {\r\n\t\tthis.checkLoggedState();\r\n\t}\r\n\r\n\tcheckLoggedState() {\r\n\t\tif (this.credentials) this.checkLoginButton();\r\n\t\tthis.authService.checkLoggedState()\r\n\t\t\t.then((creds: Credentials) => {\r\n\t\t\t\tthis.credentials = creds;\r\n\t\t\t\tthis.checkLoginButton();\r\n\t\t\t});\r\n\t}\r\n\t\r\n\tcheckLoginButton() {\r\n\t\tif (this.credentials.loggedIn) {\r\n\t\t\tthis.loginButton = 'Log Out';\r\n\t\t} else {\r\n\t\t\tthis.loginButton = 'Log In';\r\n\t\t}\r\n\t}\r\n\t\r\n\thandleLogging() {\r\n\t\tthis.authService.handleAuthLogging().then(res => this.checkLoggedState());\r\n\t}\r\n\t\r\n\tnavHome() {\r\n\t\tif (!this.router.isRouteActive(this.router.generate(['PollContainer']))) {\r\n\t\t\tthis.myPollsFiltering = false;\r\n\t\t\tthis.router.navigate(['PollContainer']);\r\n\t\t} else if (this.myPollsFiltering) {\r\n\t\t\tthis.myPollsFiltering = false;\r\n\t\t\tthis.router.navigate(['PollContainer']);\r\n\t\t}\r\n\t}\r\n\t\r\n\tnavMyPolls() {\r\n\t\tif (!this.router.isRouteActive(this.router.generate(['PollContainer']))) {\r\n\t\t\tthis.myPollsFiltering = true;\r\n\t\t\tthis.router.navigate(['PollContainer', {user: this.credentials.user.githubID}]);\r\n\t\t} else if (!this.myPollsFiltering) {\r\n\t\t\tthis.myPollsFiltering = true;\r\n\t\t\tthis.router.navigate(['PollContainer', {user: this.credentials.user.githubID}]);\r\n\t\t}\r\n\t}\r\n\t\r\n\tsetButtonClass(button: string) {\r\n\t\tlet inactiveButton = {\"button\": true, \"active-button\": false};\r\n\t\tlet activeButton = {\"button\": false, \"active-button\": true};\r\n\t\tswitch (button) {\r\n\t\t\tcase 'home':\r\n\t\t\t\tif (this.router.isRouteActive(this.router.generate(['PollContainer'])) \r\n\t\t\t\t\t\t&& !this.myPollsFiltering) return activeButton;\r\n\t\t\t\telse return inactiveButton;\r\n\t\t\tcase 'my-polls':\r\n\t\t\t\tif (this.router.isRouteActive(this.router.generate(['PollContainer']))\r\n\t\t\t\t\t\t&& this.myPollsFiltering) return activeButton;\r\n\t\t\t\telse return inactiveButton;\r\n\t\t\tcase 'new-poll':\r\n\t\t\t\tif (this.router.isRouteActive(this.router.generate(['NewPoll']))) return activeButton;\r\n\t\t\t\telse return inactiveButton;\r\n\t\t\tdefault:\r\n\t\t\t\treturn inactiveButton;\r\n\t\t}\r\n\t}\r\n}"]}