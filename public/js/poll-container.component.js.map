{"version":3,"sources":["poll-container.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAuBA;gBAII,uBAAqB,YAA0B,EAC1B,MAAc,EACd,WAAwB,EACxB,QAAkB;oBAP3C,iBAsCC;oBAlCwB,iBAAY,GAAZ,YAAY,CAAc;oBAC1B,WAAM,GAAN,MAAM,CAAQ;oBACd,gBAAW,GAAX,WAAW,CAAa;oBACxB,aAAQ,GAAR,QAAQ,CAAU;oBANvC,UAAK,GAAW,EAAE,CAAC;oBACnB,iBAAY,GAAS,IAAI,CAAC;oBAMT,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,SAAS,CAAC,UAAC,WAAiB;wBACtD,IAAI,iBAAiB,GAAG,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,KAAI,CAAC,KAAK,EAAE,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,GAAG,KAAK,WAAW,CAAC,GAAG,EAAzB,CAAyB,CAAC,CAAC,CAAC;wBAC/F,KAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,GAAG,WAAW,CAAC;wBAC5C,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;oBACtD,CAAC,CAAC,CAAC;gBACP,CAAC;gBAEd,gCAAQ,GAAR;oBAAA,iBAQC;oBAPG,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,UAAA,GAAG;wBACpC,KAAI,CAAC,KAAK,GAAG,GAAG,CAAC;wBACjB,IAAI,cAAc,GAAG,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;wBACpD,EAAE,CAAC,CAAC,cAAc,CAAC;4BAAC,KAAI,CAAC,YAAY,GAAG,CAAC,CAAC,IAAI,CAAC,KAAI,CAAC,KAAK,EAAE,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,GAAG,KAAK,cAAc,EAA3B,CAA2B,CAAC,CAAC;wBAChG,IAAI,UAAU,GAAG,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;wBAC9C,EAAE,CAAC,CAAC,UAAU,CAAC;4BAAC,KAAI,CAAC,KAAK,GAAG,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,OAAO,KAAK,UAAU,EAA3B,CAA2B,CAAC,CAAC;oBACxF,CAAC,CAAC,CAAC;gBACP,CAAC;gBAED,oCAAY,GAAZ,UAAa,IAAU;oBACnB,MAAM,CAAC;wBACH,MAAM,EAAE,IAAI;wBACZ,UAAU,EAAE,IAAI,KAAK,IAAI,CAAC,YAAY;qBACzC,CAAA;gBACL,CAAC;gBAED,kCAAU,GAAV,UAAW,WAAiB;oBACxB,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;oBAChC,2EAA2E;oBAC3E,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,cAAY,IAAI,CAAC,YAAY,CAAC,GAAK,CAAC,CAAC;gBAC1D,CAAC;gBAnDL;oBAAC,gBAAS,CAAC;wBACP,QAAQ,EAAE,gBAAgB;wBAC1B,SAAS,EAAE,CAAC,gBAAgB,CAAC;wBAC7B,QAAQ,EAAE,2bAST;wBACD,UAAU,EAAE,CAAC,oCAAW,CAAC;qBAC5B,CAAC;;iCAAA;gBAuCF,oBAAC;YAAD,CAtCA,AAsCC,IAAA;YAtCD,yCAsCC,CAAA","file":"poll-container.component.js","sourcesContent":["import {Component, OnInit} from \"@angular/core\";\r\nimport {Location} from \"@angular/common\";\r\nimport {RouteParams, Router} from \"@angular/router-deprecated\";\r\nimport * as _ from 'lodash';\r\nimport {Poll} from \"./Poll\";\r\nimport {PollDetails} from \"./poll-details.component\";\r\nimport {PollsService} from \"./polls.service\";\r\n\r\n@Component({\r\n    selector: 'poll-container',\r\n    styleUrls: ['../css/app.css'],\r\n    template: `\r\n        <div class=\"poll-wrapper\">\r\n            <div id=\"poll-list\" [ngClass]=\"{'show-details': (selectedPoll !== null)}\">\r\n                <div *ngFor=\"let poll of polls\" [ngClass]=\"setPollClass(poll)\" (click)=\"selectPoll(poll)\">\r\n                    {{ poll.question }}\r\n                </div>\r\n            </div>\r\n            <poll-details *ngIf=\"selectedPoll\" [poll]=\"selectedPoll\"></poll-details>\r\n        </div>\r\n    `,\r\n    directives: [PollDetails]\r\n})\r\nexport class PollContainer implements OnInit {\r\n    polls: Poll[] = [];\r\n    selectedPoll: Poll = null;\r\n\r\n    constructor( private pollsService: PollsService, \r\n                 private router: Router, \r\n                 private routeParams: RouteParams,\r\n                 private location: Location ) {\r\n                     this.pollsService.pollUpdated.subscribe((updatedPoll: Poll) => {\r\n                         let pollToUpdateIndex = this.polls.indexOf(_.find(this.polls, o => o._id === updatedPoll._id));\r\n                         this.polls[pollToUpdateIndex] = updatedPoll;\r\n                         this.selectedPoll = this.polls[pollToUpdateIndex];\r\n                     });\r\n                 }\r\n    \r\n    ngOnInit() {\r\n        this.pollsService.getAllPolls().then(res => {\r\n            this.polls = res;\r\n            let selectedPollID = this.routeParams.get('pollid');\r\n            if (selectedPollID) this.selectedPoll = _.find(this.polls, poll => poll._id === selectedPollID);\r\n            let userFilter = this.routeParams.get('user');\r\n            if (userFilter) this.polls = this.polls.filter(poll => poll.creator === userFilter);\r\n        });\r\n    }\r\n\r\n    setPollClass(poll: Poll) {\r\n        return {\r\n            \"poll\": true,\r\n            \"selected\": poll === this.selectedPoll\r\n        }\r\n    }\r\n\r\n    selectPoll(pollClicked: Poll) {\r\n        this.selectedPoll = pollClicked;\r\n        //this.router.navigate(['PollContainer', {pollid: this.selectedPoll._id}]);\r\n        this.location.go(`/?pollid=${this.selectedPoll._id}`);\r\n    }\r\n\r\n}"]}