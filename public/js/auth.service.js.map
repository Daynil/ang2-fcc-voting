{"version":3,"sources":["auth.service.ts"],"names":[],"mappings":"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","file":"auth.service.js","sourcesContent":["import {Injectable, EventEmitter} from \"@angular/core\";\r\nimport {Http, Response} from \"@angular/http\";\r\nimport {Observable} from \"rxjs/Observable\";\r\nimport \"rxjs/add/operator/toPromise\";\r\nimport {User, Credentials} from \"./User\";\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n\t\r\n\tcreds: Credentials = null;\r\n\tloginEvent: EventEmitter<Credentials> = new EventEmitter<Credentials>();;\r\n\t\r\n\tconstructor (private http: Http) { }\r\n\t\r\n\tprivate parseData(res: Response) {\r\n\t\tif (res.status < 200 || res.status >= 300) {\r\n\t\t\tthrow new Error(`Response status: ${res.status}`);\r\n\t\t}\r\n\t\tlet body = res.json();\r\n\t\treturn body;\r\n\t}\r\n\t\r\n\tprivate handleError(error: any) {\r\n\t\tlet errMsg = error.message || 'Server error';\r\n\t\tconsole.log(errMsg);\r\n\t}\r\n\t\r\n\tcheckLoggedState(): Promise<Credentials> {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tif (this.creds) {\r\n\t\t\t\tresolve(this.creds);\r\n\t\t\t}\r\n\t\t\telse this.refreshLoggedState().then(res => {\r\n\t\t\t\tresolve(this.creds);\t\t\t\t\r\n\t\t\t});\r\n\t\t});\r\n\t\t\r\n\t}\r\n\t\r\n\tprivate refreshLoggedState() {\r\n\t\treturn this.http\r\n\t\t\t\t\t.get('/auth/checkCreds')\r\n\t\t\t\t\t.toPromise()\r\n\t\t\t\t\t.then(this.parseData)\r\n\t\t\t\t\t.then(res => {\r\n\t\t\t\t\t\tthis.creds = res;\r\n\t\t\t\t\t\tthis.loginEvent.emit(this.creds);\r\n\t\t\t\t\t\treturn this.creds;\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(this.handleError);\r\n\t}\r\n\t\r\n\thandleAuthLogging(): Promise<any> {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tthis.refreshLoggedState().then(res => {\r\n\t\t\t\tif (!res.loggedIn) {\r\n\t\t\t\t\tlet oauthWindow = window.open('https://daynil-voting-app.herokuapp.com/auth/github',\r\n\t\t\t\t\t\t\t\t\t\t\t\t'OAuthConnect',\r\n\t\t\t\t\t\t\t\t\t\t\t\t'location=0,status=0,width=800,height=400');\r\n\t\t\t\t\tlet oauthInterval = window.setInterval(() => {\r\n\t\t\t\t\t\tif (oauthWindow.closed) {\r\n\t\t\t\t\t\t\twindow.clearInterval(oauthInterval);\r\n\t\t\t\t\t\t\tthis.refreshLoggedState().then(resolve);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, 1000);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.http.get('/auth/logout').subscribe(res => {\r\n\t\t\t\t\t\tthis.refreshLoggedState().then(resolve);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}"]}