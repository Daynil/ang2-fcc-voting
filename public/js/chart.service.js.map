{"version":3,"sources":["chart.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;YAOA;gBAIC;gBAAgB,CAAC;gBAEjB,kCAAW,GAAX,UAAY,EAAqB,EAAE,WAAqB;oBACvD,IAAI,GAAG,GAAG,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;oBAC9B,IAAI,QAAQ,GAAG;wBACd,MAAM,EAAE,EAAE;wBACV,QAAQ,EAAE;4BACT;gCACC,IAAI,EAAE,EAAE;gCACR,eAAe,EAAE;oCAChB,SAAS;oCACT,SAAS;oCACT,SAAS;iCACT;gCACD,oBAAoB,EAAE;oCACrB,SAAS;oCACT,SAAS;oCACT,SAAS;iCACT;6BACD,CAAC;qBACH,CAAC;oBACF,WAAW,CAAC,OAAO,CAAC,UAAA,MAAM;wBACzB,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;wBAClC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;oBAC9C,CAAC,CAAC,CAAC;oBACH,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;oBACtB,IAAI,CAAC,YAAY,GAAG,IAAI,KAAK,CAAC,GAAG,EAAE;wBAClC,IAAI,EAAE,UAAU;wBAChB,IAAI,EAAE,QAAQ;qBACd,CAAC,CAAC;gBACJ,CAAC;gBAED,gCAAS,GAAT,UAAU,EAAqB,EAAE,WAAqB;oBACrD,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;oBAC5B,IAAI,CAAC,WAAW,CAAC,EAAE,EAAE,WAAW,CAAC,CAAC;gBACnC,CAAC;gBAED,kCAAW,GAAX,UAAY,WAAqB;oBAChC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,WAAW,CAAC,GAAG,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,KAAK,EAAZ,CAAY,CAAC,CAAC;oBAClF,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC;gBAC5B,CAAC;gBA7CF;oBAAC,iBAAU,EAAE;;gCAAA;gBA8Cb,mBAAC;YAAD,CA7CA,AA6CC,IAAA;YA7CD,uCA6CC,CAAA","file":"chart.service.js","sourcesContent":["import {Injectable} from \"@angular/core\";\r\nimport {Choice} from \"./Poll\";\r\n\r\n// Suppress typescript for chartjs, typings not working properly\r\ndeclare var Chart: any;\r\n\r\n@Injectable()\r\nexport class ChartService {\r\n\t\r\n\tcurrentChart;\r\n\t\r\n\tconstructor() { }\r\n\t\r\n\tcreateChart(el: HTMLCanvasElement, choicesList: Choice[]) {\r\n\t\tlet ctx = el.getContext(\"2d\");\r\n\t\tlet fullData = {\r\n\t\t\tlabels: [],\r\n\t\t\tdatasets: [\r\n\t\t\t\t{\r\n\t\t\t\t\tdata: [],\r\n\t\t\t\t\tbackgroundColor: [\r\n\t\t\t\t\t\t\"#FF6384\",\r\n\t\t\t\t\t\t\"#36A2EB\",\r\n\t\t\t\t\t\t\"#FFCE56\"\r\n\t\t\t\t\t],\r\n\t\t\t\t\thoverBackgroundColor: [\r\n\t\t\t\t\t\t\"#FF6384\",\r\n\t\t\t\t\t\t\"#36A2EB\",\r\n\t\t\t\t\t\t\"#FFCE56\"\r\n\t\t\t\t\t]\r\n\t\t\t\t}]\r\n\t\t};\r\n\t\tchoicesList.forEach(choice => {\r\n\t\t\tfullData.labels.push(choice.text);\r\n\t\t\tfullData.datasets[0].data.push(choice.votes);\r\n\t\t});\r\n\t\tconsole.log(fullData);\r\n\t\tthis.currentChart = new Chart(ctx, {\r\n\t\t\ttype: 'doughnut',\r\n\t\t\tdata: fullData\r\n\t\t});\r\n\t}\r\n\t\r\n\tnextChart(el: HTMLCanvasElement, choicesList: Choice[]) {\r\n\t\tthis.currentChart.destroy();\r\n\t\tthis.createChart(el, choicesList);\r\n\t}\r\n\t\r\n\tupdateChart(choicesList: Choice[]) {\r\n\t\tthis.currentChart.data.datasets[0].data = choicesList.map(choice => choice.votes);\r\n\t\tthis.currentChart.update();\r\n\t}\r\n}\r\n\r\n"]}