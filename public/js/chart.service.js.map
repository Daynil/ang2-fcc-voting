{"version":3,"sources":["chart.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;YAQA;gBAUC;oBANA,cAAS,GAAG;wBACX,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;wBACrD,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;wBACrD,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;qBACrD,CAAA;gBAEe,CAAC;gBAEjB,kCAAW,GAAX;oBACC,IAAI,KAAK,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;oBACpC,IAAI,KAAK,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;oBACpC,IAAI,KAAK,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;oBACpC,MAAM,CAAC,SAAO,KAAK,UAAK,KAAK,UAAK,KAAK,MAAG,CAAC;gBAC5C,CAAC;gBAED,kCAAW,GAAX,UAAY,EAAqB,EAAE,WAAqB;oBAAxD,iBAuBC;oBAtBA,IAAI,GAAG,GAAG,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;oBAC9B,IAAI,QAAQ,GAAG;wBACd,MAAM,EAAE,EAAE;wBACV,QAAQ,EAAE;4BACT;gCACC,IAAI,EAAE,EAAE;gCACR,eAAe,EAAE,EAAE;gCACnB,oBAAoB,EAAE,EAAE;6BACxB,CAAC;qBACH,CAAC;oBACF,WAAW,CAAC,OAAO,CAAC,UAAC,MAAM,EAAE,CAAC,EAAE,GAAG;wBAClC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;wBAClC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;wBAC7C,IAAI,SAAS,GAAG,KAAI,CAAC,SAAS,CAAC,CAAC,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;wBAC1D,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;wBACrD,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,oBAAoB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;oBAC3D,CAAC,CAAC,CAAC;oBACH,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;oBACtB,IAAI,CAAC,YAAY,GAAG,IAAI,KAAK,CAAC,GAAG,EAAE;wBAClC,IAAI,EAAE,UAAU;wBAChB,IAAI,EAAE,QAAQ;qBACd,CAAC,CAAC;gBACJ,CAAC;gBAED,gCAAS,GAAT,UAAU,EAAqB,EAAE,WAAqB;oBACrD,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;oBAC5B,IAAI,CAAC,WAAW,CAAC,EAAE,EAAE,WAAW,CAAC,CAAC;gBACnC,CAAC;gBAED,kCAAW,GAAX,UAAY,WAAqB;oBAChC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,WAAW,CAAC,GAAG,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,KAAK,EAAZ,CAAY,CAAC,CAAC;oBAElF,sCAAsC;oBACtC,EAAE,CAAC,CAAC,WAAW,CAAC,MAAM,KAAK,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;wBACjE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;wBAC3E,IAAI,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,MAAM,GAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;wBAC7E,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;wBACnE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,oBAAoB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;oBACzE,CAAC;oBACD,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC;gBAC5B,CAAC;gBA7DF;oBAAC,iBAAU,EAAE;;gCAAA;gBA8Db,mBAAC;YAAD,CA7DA,AA6DC,IAAA;YA7DD,uCA6DC,CAAA","file":"chart.service.js","sourcesContent":["import {Injectable} from \"@angular/core\";\r\nimport {Choice} from \"./Poll\";\r\nimport * as _ from \"lodash\";\r\n\r\n// Suppress typescript for chartjs, typings not working properly\r\ndeclare var Chart: any;\r\n\r\n@Injectable()\r\nexport class ChartService {\r\n\t\r\n\tcurrentChart;\r\n\t\r\n\tcolorList = [\r\n\t\t'#C0392B', '#9B59B6', '#2980B9', '#1ABC9C', '#27AE60',\r\n\t\t'#F1C40F', '#E67E22', '#95A5A6', '#34495E', '#E6B0AA',\r\n\t\t'#D7BDE2', '#A9CCE3', '#A3E4D7', '#F9E79F', '#EDBB99'\r\n\t]\r\n\t\r\n\tconstructor() { }\r\n\t\r\n\trandomColor() {\r\n\t\tlet randR = _.random(0, 255, false);\r\n\t\tlet randG = _.random(0, 255, false);\r\n\t\tlet randB = _.random(0, 255, false);\r\n\t\treturn `rgb(${randR}, ${randG}, ${randB})`;\r\n\t}\r\n\t\r\n\tcreateChart(el: HTMLCanvasElement, choicesList: Choice[]) {\r\n\t\tlet ctx = el.getContext(\"2d\");\r\n\t\tlet fullData = {\r\n\t\t\tlabels: [],\r\n\t\t\tdatasets: [\r\n\t\t\t\t{\r\n\t\t\t\t\tdata: [],\r\n\t\t\t\t\tbackgroundColor: [],\r\n\t\t\t\t\thoverBackgroundColor: []\r\n\t\t\t\t}]\r\n\t\t};\r\n\t\tchoicesList.forEach((choice, i, arr) => {\r\n\t\t\tfullData.labels.push(choice.text);\r\n\t\t\tfullData.datasets[0].data.push(choice.votes);\r\n\t\t\tlet nextColor = this.colorList[i % this.colorList.length];\r\n\t\t\tfullData.datasets[0].backgroundColor.push(nextColor);\r\n\t\t\tfullData.datasets[0].hoverBackgroundColor.push(nextColor);\r\n\t\t});\r\n\t\tconsole.log(fullData);\r\n\t\tthis.currentChart = new Chart(ctx, {\r\n\t\t\ttype: 'doughnut',\r\n\t\t\tdata: fullData\r\n\t\t});\r\n\t}\r\n\t\r\n\tnextChart(el: HTMLCanvasElement, choicesList: Choice[]) {\r\n\t\tthis.currentChart.destroy();\r\n\t\tthis.createChart(el, choicesList);\r\n\t}\r\n\t\r\n\tupdateChart(choicesList: Choice[]) {\r\n\t\tthis.currentChart.data.datasets[0].data = choicesList.map(choice => choice.votes);\r\n\t\t\r\n\t\t// Check for newly added custom choice\r\n\t\tif (choicesList.length !== this.currentChart.data.labels.length) {\r\n\t\t\tthis.currentChart.data.labels.push(choicesList[choicesList.length-1].text);\r\n\t\t\tlet nextColor = this.colorList[choicesList.length-1 % this.colorList.length];\r\n\t\t\tthis.currentChart.data.datasets[0].backgroundColor.push(nextColor);\r\n\t\t\tthis.currentChart.data.datasets[0].hoverBackgroundColor.push(nextColor);\r\n\t\t}\r\n\t\tthis.currentChart.update();\r\n\t}\r\n}\r\n\r\n"]}